<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN"
    "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans >
	<bean id="triangle" class="com.spring.tutorial.Triangle" abstract="true" > 			<!-- <autowire="byName" scope="singleton"> -->
		<property name="points">							<!-- abstract = true doesn't let spring to initialize this bean. It is just used as template and can be used by child beans as abstract classes in java. -->
			<list>
				<ref bean="pOne"></ref>
			</list>
		</property>
	</bean>
	
	<bean id="triangle2" class="com.spring.tutorial.Triangle" parent="triangle">	<!-- parent helps us for bean defination inheritence -->
		<property name="points">													<!-- list merge= "true"	merges the content of child with parent else it replaces the content of parent.-->		
			<list merge="true">
				<ref bean="pointTwo"></ref>
				<ref bean="pointThree"></ref>
			</list>
		</property>
	</bean>
	<bean id="pointOne" class="com.spring.tutorial.Point">
		<property name="a" value="0"></property>
		<property name="b" value="20"></property>
	</bean>

	<bean id="pointTwo" class="com.spring.tutorial.Point">
		<property name="a" value="20"></property>
		<property name="b" value="-20"></property>
	</bean>

	<bean id="pointThree" class="com.spring.tutorial.Point">
		<property name="a" value="-20"></property>
		<property name="b" value="0"></property>
	</bean>

	<alias name="pointOne" alias="pOne" />




<!-- <bean id="triangle" class="com.spring.tutorial.Triangle"> <property 
		name="type" value="Equilateral"></property> 
		<constructor-arg ref="pOne"></constructor-arg> 
		<constructor-arg ref="pointTwo"></constructor-arg> <constructor-arg> <bean 
		id="pointThree" class="com.spring.tutorial.Point"> <property name="a" value="-20"></property> 
		<property name="b" value="0"></property> </bean> </constructor-arg> </bean> -->
</beans>	